use thiserror::Error;
use yaxpeax_superh::{SuperHFeatures, SuperHInstruction, SuperHLevel};

#[derive(Error, Debug)]
pub(crate) enum Sh2CPUError {
    #[error("instruction not found")]
    BadInstruction,
}

pub(crate) struct Sh2 {
    pc: u32,
}

struct InstructionResult {
    pub latency: usize,
}

impl Sh2 {
    pub fn new() -> Self {
        Self {
            pc: 0, // TODO: reset vector?
        }
    }

    fn interpret_instr(&mut self, instr: &SuperHInstruction) -> InstructionResult {
        match instr {
            SuperHInstruction::MovImm(_, _) => todo!(),
            SuperHInstruction::MovImmW(_, _) => todo!(),
            SuperHInstruction::MovImmL(_, _) => todo!(),
            SuperHInstruction::MovReg(_, _) => todo!(),
            SuperHInstruction::MovToAtRegB(_, _) => todo!(),
            SuperHInstruction::MovToAtRegW(_, _) => todo!(),
            SuperHInstruction::MovToAtRegL(_, _) => todo!(),
            SuperHInstruction::MovFromAtRegB(_, _) => todo!(),
            SuperHInstruction::MovFromAtRegW(_, _) => todo!(),
            SuperHInstruction::MovFromAtRegL(_, _) => todo!(),
            SuperHInstruction::MovToAtRegPreDecrementB(_, _) => todo!(),
            SuperHInstruction::MovToAtRegPreDecrementW(_, _) => todo!(),
            SuperHInstruction::MovToAtRegPreDecrementL(_, _) => todo!(),
            SuperHInstruction::MovFromAtRegPostIncrementB(_, _) => todo!(),
            SuperHInstruction::MovFromAtRegPostIncrementW(_, _) => todo!(),
            SuperHInstruction::MovFromAtRegPostIncrementL(_, _) => todo!(),
            SuperHInstruction::MovToAtDisplacedRegisterB(_, _) => todo!(),
            SuperHInstruction::MovToAtDisplacedRegisterW(_, _) => todo!(),
            SuperHInstruction::MovToAtDisplacedRegisterL(_, _, _) => todo!(),
            SuperHInstruction::MovFromAtDisplacedRegisterB(_, _) => todo!(),
            SuperHInstruction::MovFromAtDisplacedRegisterW(_, _) => todo!(),
            SuperHInstruction::MovFromAtDisplacedRegisterL(_, _, _) => todo!(),
            SuperHInstruction::MovToAtIndexedRegisterB(_, _) => todo!(),
            SuperHInstruction::MovToAtIndexedRegisterW(_, _) => todo!(),
            SuperHInstruction::MovToAtIndexedRegisterL(_, _) => todo!(),
            SuperHInstruction::MovFromAtIndexedRegisterB(_, _) => todo!(),
            SuperHInstruction::MovFromAtIndexedRegisterW(_, _) => todo!(),
            SuperHInstruction::MovFromAtIndexedRegisterL(_, _) => todo!(),
            SuperHInstruction::MovToAtDisplacedGbrB(_) => todo!(),
            SuperHInstruction::MovToAtDisplacedGbrW(_) => todo!(),
            SuperHInstruction::MovToAtDisplacedGbrL(_) => todo!(),
            SuperHInstruction::MovFromAtDisplacedGbrB(_) => todo!(),
            SuperHInstruction::MovFromAtDisplacedGbrW(_) => todo!(),
            SuperHInstruction::MovFromAtDisplacedGbrL(_) => todo!(),
            SuperHInstruction::Mova(_) => todo!(),
            SuperHInstruction::Movt(_) => todo!(),
            SuperHInstruction::SwapB(_, _) => todo!(),
            SuperHInstruction::SwapW(_, _) => todo!(),
            SuperHInstruction::Xtrct(_, _) => todo!(),
            SuperHInstruction::AddReg(_, _) => todo!(),
            SuperHInstruction::AddImm(_, _) => todo!(),
            SuperHInstruction::AddC(_, _) => todo!(),
            SuperHInstruction::AddV(_, _) => todo!(),
            SuperHInstruction::CmpEqImm(_) => todo!(),
            SuperHInstruction::CmpEqReg(_, _) => todo!(),
            SuperHInstruction::CmpHs(_, _) => todo!(),
            SuperHInstruction::CmpGe(_, _) => todo!(),
            SuperHInstruction::CmpHi(_, _) => todo!(),
            SuperHInstruction::CmpGt(_, _) => todo!(),
            SuperHInstruction::CmpPz(_) => todo!(),
            SuperHInstruction::CmpPl(_) => todo!(),
            SuperHInstruction::CmpStr(_, _) => todo!(),
            SuperHInstruction::Div1(_, _) => todo!(),
            SuperHInstruction::Div0S(_, _) => todo!(),
            SuperHInstruction::Div0U => todo!(),
            SuperHInstruction::DmulsL(_, _) => todo!(),
            SuperHInstruction::DmuluL(_, _) => todo!(),
            SuperHInstruction::Dt(_) => todo!(),
            SuperHInstruction::ExtsB(_, _) => todo!(),
            SuperHInstruction::ExtsW(_, _) => todo!(),
            SuperHInstruction::ExtuB(_, _) => todo!(),
            SuperHInstruction::ExtuW(_, _) => todo!(),
            SuperHInstruction::MacL(_, _) => todo!(),
            SuperHInstruction::MacW(_, _) => todo!(),
            SuperHInstruction::MulL(_, _) => todo!(),
            SuperHInstruction::MulsW(_, _) => todo!(),
            SuperHInstruction::MuluW(_, _) => todo!(),
            SuperHInstruction::Neg(_, _) => todo!(),
            SuperHInstruction::Negc(_, _) => todo!(),
            SuperHInstruction::Sub(_, _) => todo!(),
            SuperHInstruction::Subc(_, _) => todo!(),
            SuperHInstruction::Subv(_, _) => todo!(),
            SuperHInstruction::AndReg(_, _) => todo!(),
            SuperHInstruction::AndImm(_) => todo!(),
            SuperHInstruction::AndB(_) => todo!(),
            SuperHInstruction::Not(_, _) => todo!(),
            SuperHInstruction::OrReg(_, _) => todo!(),
            SuperHInstruction::OrImm(_) => todo!(),
            SuperHInstruction::OrB(_) => todo!(),
            SuperHInstruction::TasB(_) => todo!(),
            SuperHInstruction::TstReg(_, _) => todo!(),
            SuperHInstruction::TstImm(_) => todo!(),
            SuperHInstruction::TstB(_) => todo!(),
            SuperHInstruction::XorReg(_, _) => todo!(),
            SuperHInstruction::XorImm(_) => todo!(),
            SuperHInstruction::XorB(_) => todo!(),
            SuperHInstruction::RotL(_) => todo!(),
            SuperHInstruction::RotR(_) => todo!(),
            SuperHInstruction::RotcL(_) => todo!(),
            SuperHInstruction::RotcR(_) => todo!(),
            SuperHInstruction::ShaD(_, _) => todo!(),
            SuperHInstruction::ShaL(_) => todo!(),
            SuperHInstruction::ShaR(_) => todo!(),
            SuperHInstruction::ShlD(_, _) => todo!(),
            SuperHInstruction::ShlL(_) => todo!(),
            SuperHInstruction::ShlR(_) => todo!(),
            SuperHInstruction::ShlL2(_) => todo!(),
            SuperHInstruction::ShlR2(_) => todo!(),
            SuperHInstruction::ShlL8(_) => todo!(),
            SuperHInstruction::ShlR8(_) => todo!(),
            SuperHInstruction::ShlL16(_) => todo!(),
            SuperHInstruction::ShlR16(_) => todo!(),
            SuperHInstruction::Bf(_) => todo!(),
            SuperHInstruction::BfS(_) => todo!(),
            SuperHInstruction::Bt(_) => todo!(),
            SuperHInstruction::BtS(_) => todo!(),
            SuperHInstruction::Bra(_) => todo!(),
            SuperHInstruction::BraF(_) => todo!(),
            SuperHInstruction::Bsr(_) => todo!(),
            SuperHInstruction::BsrF(_) => todo!(),
            SuperHInstruction::Jmp(_) => todo!(),
            SuperHInstruction::Jsr(_) => todo!(),
            SuperHInstruction::Rts => todo!(),
            SuperHInstruction::ClrMac => todo!(),
            SuperHInstruction::ClrS => todo!(),
            SuperHInstruction::ClrT => todo!(),
            SuperHInstruction::LdcSr(_) => todo!(),
            SuperHInstruction::LdcGbr(_) => todo!(),
            SuperHInstruction::LdcVbr(_) => todo!(),
            SuperHInstruction::LdcSsr(_) => todo!(),
            SuperHInstruction::LdcSpc(_) => todo!(),
            SuperHInstruction::LdcDbr(_) => todo!(),
            SuperHInstruction::LdcRnBank(_, _) => todo!(),
            SuperHInstruction::LdcLSr(_) => todo!(),
            SuperHInstruction::LdcLGbr(_) => todo!(),
            SuperHInstruction::LdcLVbr(_) => todo!(),
            SuperHInstruction::LdcLSsr(_) => todo!(),
            SuperHInstruction::LdcLSpc(_) => todo!(),
            SuperHInstruction::LdcLDbr(_) => todo!(),
            SuperHInstruction::LdcLRnBank(_, _) => todo!(),
            SuperHInstruction::LdsMach(_) => todo!(),
            SuperHInstruction::LdsMacl(_) => todo!(),
            SuperHInstruction::LdsPr(_) => todo!(),
            SuperHInstruction::LdsLMach(_) => todo!(),
            SuperHInstruction::LdsLMacl(_) => todo!(),
            SuperHInstruction::LdsLPr(_) => todo!(),
            SuperHInstruction::Ldtlb => todo!(),
            SuperHInstruction::MovcaL(_) => todo!(),
            SuperHInstruction::Nop => todo!(),
            SuperHInstruction::OcbI(_) => todo!(),
            SuperHInstruction::OcbP(_) => todo!(),
            SuperHInstruction::OcbWb(_) => todo!(),
            SuperHInstruction::Pref(_) => todo!(),
            SuperHInstruction::Rte => todo!(),
            SuperHInstruction::SetS => todo!(),
            SuperHInstruction::SetT => todo!(),
            SuperHInstruction::Sleep => todo!(),
            SuperHInstruction::StcSr(_) => todo!(),
            SuperHInstruction::StcGbr(_) => todo!(),
            SuperHInstruction::StcVbr(_) => todo!(),
            SuperHInstruction::StcSsr(_) => todo!(),
            SuperHInstruction::StcSpc(_) => todo!(),
            SuperHInstruction::StcSgr(_) => todo!(),
            SuperHInstruction::StcDbr(_) => todo!(),
            SuperHInstruction::StcRmBank(_, _) => todo!(),
            SuperHInstruction::StcLSr(_) => todo!(),
            SuperHInstruction::StcLGbr(_) => todo!(),
            SuperHInstruction::StcLVbr(_) => todo!(),
            SuperHInstruction::StcLSsr(_) => todo!(),
            SuperHInstruction::StcLSpc(_) => todo!(),
            SuperHInstruction::StcLSgr(_) => todo!(),
            SuperHInstruction::StcLDbr(_) => todo!(),
            SuperHInstruction::StcLRmBank(_, _) => todo!(),
            SuperHInstruction::StsMach(_) => todo!(),
            SuperHInstruction::StsMacl(_) => todo!(),
            SuperHInstruction::StsPr(_) => todo!(),
            SuperHInstruction::StsLMach(_) => todo!(),
            SuperHInstruction::StsLMacl(_) => todo!(),
            SuperHInstruction::StsLPr(_) => todo!(),
            SuperHInstruction::Trapa(_) => todo!(),
            SuperHInstruction::Fldi0(_) => todo!(),
            SuperHInstruction::Fldi1(_) => todo!(),
            SuperHInstruction::FMovS(_, _) => todo!(),
            SuperHInstruction::FMovAtRegS(_, _) => todo!(),
            SuperHInstruction::FMovAtIndexedRegisterS(_, _) => todo!(),
            SuperHInstruction::FMovAtPostIncrementRegS(_, _) => todo!(),
            SuperHInstruction::FMovToAtRegS(_, _) => todo!(),
            SuperHInstruction::FMovToAtPreDecrementRegS(_, _) => todo!(),
            SuperHInstruction::FMovToAtIndexedRegisterS(_, _) => todo!(),
            SuperHInstruction::FMov(_, _) => todo!(),
            SuperHInstruction::FMovAtReg(_, _) => todo!(),
            SuperHInstruction::FMovAtIndexedRegister(_, _) => todo!(),
            SuperHInstruction::FMovAtPostIncrementReg(_, _) => todo!(),
            SuperHInstruction::FMovToAtReg(_, _) => todo!(),
            SuperHInstruction::FMovToAtPreDecrementReg(_, _) => todo!(),
            SuperHInstruction::FMovToAtIndexedRegister(_, _) => todo!(),
            SuperHInstruction::Flds(_) => todo!(),
            SuperHInstruction::Fsts(_) => todo!(),
            SuperHInstruction::FabsS(_) => todo!(),
            SuperHInstruction::FaddS(_, _) => todo!(),
            SuperHInstruction::FcmpEqS(_, _) => todo!(),
            SuperHInstruction::FcmpGtS(_, _) => todo!(),
            SuperHInstruction::FdivS(_, _) => todo!(),
            SuperHInstruction::FloatS(_) => todo!(),
            SuperHInstruction::Fmac(_, _) => todo!(),
            SuperHInstruction::FmulS(_, _) => todo!(),
            SuperHInstruction::FnegS(_) => todo!(),
            SuperHInstruction::FsqrtS(_) => todo!(),
            SuperHInstruction::FsubS(_, _) => todo!(),
            SuperHInstruction::FrtcS(_) => todo!(),
            SuperHInstruction::Fabs(_) => todo!(),
            SuperHInstruction::Fadd(_, _) => todo!(),
            SuperHInstruction::FcmpEq(_, _) => todo!(),
            SuperHInstruction::FcmpGt(_, _) => todo!(),
            SuperHInstruction::Fdiv(_, _) => todo!(),
            SuperHInstruction::FcnvDs(_) => todo!(),
            SuperHInstruction::FcnvSd(_) => todo!(),
            SuperHInstruction::Float(_) => todo!(),
            SuperHInstruction::Fmul(_, _) => todo!(),
            SuperHInstruction::Fneg(_) => todo!(),
            SuperHInstruction::Fsqrt(_) => todo!(),
            SuperHInstruction::Fsub(_, _) => todo!(),
            SuperHInstruction::Frtc(_) => todo!(),
            SuperHInstruction::LdsFpscr(_) => todo!(),
            SuperHInstruction::LdsFpul(_) => todo!(),
            SuperHInstruction::LdsFpscrL(_) => todo!(),
            SuperHInstruction::LdsFpulL(_) => todo!(),
            SuperHInstruction::StsFpscr(_) => todo!(),
            SuperHInstruction::StsFpul(_) => todo!(),
            SuperHInstruction::StsFpscrL(_) => todo!(),
            SuperHInstruction::StsFpulL(_) => todo!(),
            SuperHInstruction::FMovToX(_, _) => todo!(),
            SuperHInstruction::FMovFromX(_, _) => todo!(),
            SuperHInstruction::FMovX(_, _) => todo!(),
            SuperHInstruction::FMovAtRegX(_, _) => todo!(),
            SuperHInstruction::FMovAtPostIncrementRegX(_, _) => todo!(),
            SuperHInstruction::FMovAtIndexedRegisterX(_, _) => todo!(),
            SuperHInstruction::FMovToAtRegX(_, _) => todo!(),
            SuperHInstruction::FMovToAtPreDecrementRegX(_, _) => todo!(),
            SuperHInstruction::FMovToAtIndexedRegisterX(_, _) => todo!(),
            SuperHInstruction::Fipr(_, _) => todo!(),
            SuperHInstruction::Xmrtx(_) => todo!(),
            SuperHInstruction::FrChg => todo!(),
            SuperHInstruction::FsChg => todo!(),
            SuperHInstruction::CasL(_, _) => todo!(),
        }
    }

    fn decode(&self, opcode: u16) -> Result<SuperHInstruction, Sh2CPUError> {
        let fpscr_sz = false;
        let instr =
            SuperHInstruction::parse(opcode, fpscr_sz).ok_or(Sh2CPUError::BadInstruction)?;
        if instr.level() > SuperHLevel::Sh2 || !instr.features().is_empty() {
            return Err(Sh2CPUError::BadInstruction);
        }

        Ok(instr)
    }

    // TODO: distinguish between recoverable/nonrecoverable errors?
    pub fn execute(&mut self, mut ncycles: usize) -> Result<(), Sh2CPUError> {
        while ncycles >= 0 {
            let opcode: u16 = 0;
            let instr = self.decode(opcode)?;
            let res = self.interpret_instr(&instr);

            ncycles -= res.latency;
        }

        Ok(())
    }
}
